/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */
 body {
  background-color: rgba(0, 0, 0, 1);
  color: rgba(255, 255, 255, 1);
 }
 body {
   margin: 0;
   padding: 0;
   background-color: black;
   /* Set the background color to black */

   /* Hide vertical scrollbar initially */
 }
 body,
 p,
 h1 {
  font-family: "Haas Grot Disp 65 Medium", sans-serif;
 }
 body.dark-mode {
  background-color: rgba(0, 0, 0, 1);
  color: rgba(255, 255, 255, 1);
}
body.light-mode {
 background-color: white;
 color: black;
}
 /* Show the footer when scrolling down */
 body.active-footer .footer {
  bottom: 0;
}

a {
  text-decoration: none;
} 
.background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  max-width: 100%;
  height: 100vh;
  background-image: url('E&S-frame-white.png');
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  background-attachment: fixed;
  z-index: 2;
  /* Adjust this to control the sizing of the background image */
}
.background.light-mode {
  background-image: url('E&S-frame-white.png');
  /* Replace with your light mode image */
}
.background.dark-mode {
  background-image: url('E&S-frame-black.png');
}
.container {
  display: flex;
  flex-direction: row;
  padding: 10vh;
  width: 100%;
}
.container > h1 {
  padding-bottom: -15px;
}
.left-side {
  display: flex;
  flex-direction: column;
  flex: 1;
}
.menu ul {
  padding: 0;
}
.menu li {
  list-style: none;
}

.center {
  margin-top: 3.5rem;
  flex: 2 1 0%;
}
.center h4 {
  margin-left: 10rem;
}
.center p {
  text-indent: 10rem;
}
.video {
  align-items: center;
  display: flex;
  flex: 1;
}
.title h1 {
  width: 130%;
  position: relative;
  z-index: 2;
  margin-bottom: 0px;
}
.title p {
  margin-top:0px;
}
.right-side {
  display: flex;
  flex-direction: column;
  flex: 1;
  margin-top: 4.83rem;
  margin-left: 3rem;
}
.right-side ul {
  margin: 0;
  padding: 0;
}
.right-side li {
  list-style: none;
}
.layout-options {
  position: fixed;
  bottom: 0;
  right: 0;
  padding: 1.5rem;
}
.layout-options ul {
  text-align: right;
  list-style: none;
}
footer {
    z-index: 1;
    position: fixed;
    bottom: 0;
    width: 100%;
    height: 100px; /* Set the height of your footer */
    background-color: red; /* Set the background color to red */
    transition: bottom 0.3s; /* Add smooth transition effect */
}
.footer {
  align-content: center;
}
@media (max-width: 800px) {
  body {
    margin: 0;
    padding: 0;
  }
  h1 {
    font-size: 1.75em;
  }
  p {
    font-size: 1rem;
    margin-top: -4vh;
  }
  .background {
    background-image: none;
  }
  .container {
    flex-direction: column;
    padding-top: 0;
    justify-content: center; /* Centrer horizontalement */
    align-items: flex-start; /* Centrer verticalement */
    height: 100vh; /* Remplit la hauteur de l'Ã©cran */
    max-height: 100vh;
  }
  .left-side {
    flex: none;
  }

  .menu ul {
    column-count: 2; 
    column-gap: 20px;
    padding: 0;
  }
  .menu li {
    list-style: none;
    margin: 0; 
    padding: 0; 
  }
  .center {
    display: flex;
    flex: none;
  }

  .right-side {
    display: none;
  }
  footer {
    display: none;
  }
}